//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class PTODataEntities : DbContext
{
    public PTODataEntities()
        : base("name=PTODataEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Employee> Employees { get; set; }
    public virtual DbSet<EmployeeRole> EmployeeRoles { get; set; }
    public virtual DbSet<EmployeePTOHistory> EmployeePTOHistories { get; set; }
    public virtual DbSet<EmployeeRequest> EmployeeRequests { get; set; }

    public virtual int SubmitEmployeeRequest(Nullable<int> employeeID, Nullable<decimal> ptoAmount, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string description)
    {
        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("employeeID", employeeID) :
            new ObjectParameter("employeeID", typeof(int));

        var ptoAmountParameter = ptoAmount.HasValue ?
            new ObjectParameter("ptoAmount", ptoAmount) :
            new ObjectParameter("ptoAmount", typeof(decimal));

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("startDate", startDate) :
            new ObjectParameter("startDate", typeof(System.DateTime));

        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("endDate", endDate) :
            new ObjectParameter("endDate", typeof(System.DateTime));

        var descriptionParameter = description != null ?
            new ObjectParameter("description", description) :
            new ObjectParameter("description", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubmitEmployeeRequest", employeeIDParameter, ptoAmountParameter, startDateParameter, endDateParameter, descriptionParameter);
    }

    public virtual int ExecuteDailyRequests()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExecuteDailyRequests");
    }

    public virtual int SubmitEmployeePTOHistory(Nullable<int> employeeID, Nullable<decimal> ptoAmount, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string description, Nullable<decimal> resultingPTOBalance)
    {
        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("employeeID", employeeID) :
            new ObjectParameter("employeeID", typeof(int));

        var ptoAmountParameter = ptoAmount.HasValue ?
            new ObjectParameter("ptoAmount", ptoAmount) :
            new ObjectParameter("ptoAmount", typeof(decimal));

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("startDate", startDate) :
            new ObjectParameter("startDate", typeof(System.DateTime));

        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("endDate", endDate) :
            new ObjectParameter("endDate", typeof(System.DateTime));

        var descriptionParameter = description != null ?
            new ObjectParameter("description", description) :
            new ObjectParameter("description", typeof(string));

        var resultingPTOBalanceParameter = resultingPTOBalance.HasValue ?
            new ObjectParameter("resultingPTOBalance", resultingPTOBalance) :
            new ObjectParameter("resultingPTOBalance", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubmitEmployeePTOHistory", employeeIDParameter, ptoAmountParameter, startDateParameter, endDateParameter, descriptionParameter, resultingPTOBalanceParameter);
    }

    public virtual int AutoAccrual(Nullable<int> employeeID, Nullable<decimal> newBalance)
    {
        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("employeeID", employeeID) :
            new ObjectParameter("employeeID", typeof(int));

        var newBalanceParameter = newBalance.HasValue ?
            new ObjectParameter("newBalance", newBalance) :
            new ObjectParameter("newBalance", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoAccrual", employeeIDParameter, newBalanceParameter);
    }

    public virtual int ConvertRequestToHistory(Nullable<decimal> newBalance, Nullable<int> employeeRequestID)
    {
        var newBalanceParameter = newBalance.HasValue ?
            new ObjectParameter("newBalance", newBalance) :
            new ObjectParameter("newBalance", typeof(decimal));

        var employeeRequestIDParameter = employeeRequestID.HasValue ?
            new ObjectParameter("employeeRequestID", employeeRequestID) :
            new ObjectParameter("employeeRequestID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConvertRequestToHistory", newBalanceParameter, employeeRequestIDParameter);
    }

    public virtual int Reset(Nullable<System.DateTime> asOfDate)
    {
        var asOfDateParameter = asOfDate.HasValue ?
            new ObjectParameter("asOfDate", asOfDate) :
            new ObjectParameter("asOfDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reset", asOfDateParameter);
    }
}
